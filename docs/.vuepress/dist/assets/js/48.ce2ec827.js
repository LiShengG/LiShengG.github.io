(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{398:function(s,n,a){"use strict";a.r(n);var t=a(4),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("blockquote",[n("p",[s._v("1、channel 是否线程安全？锁用在什么地方？\n2、go channel 的底层实现原理 （数据结构）\n3、nil、关闭的 channel、有数据的 channel，再进行读、写、关闭会怎么样？（各类变种题型）\n4、向 channel 发送数据和从 channel 读数据的流程是什么样的？")])]),s._v(" "),n("h3",{attrs:{id:"_1-channel-的基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-channel-的基本概念"}},[s._v("#")]),s._v(" 1. "),n("strong",[s._v("Channel 的基本概念")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 什么是 Go 语言中的 Channel？它有什么特点？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[s._v("Channel 是一种类型安全的通信机制，用于在多个 Goroutine 之间传递消息。")]),s._v(" "),n("li",[s._v("Channel 具有类型，即只能发送和接收特定类型的数据。")]),s._v(" "),n("li",[s._v("Channel 本质上是一个 FIFO 队列，具有阻塞特性。")]),s._v(" "),n("li",[s._v("Go 语言中的 Channel 是并发安全的。")])])])]),s._v(" "),n("h3",{attrs:{id:"_2-如何创建和使用-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何创建和使用-channel"}},[s._v("#")]),s._v(" 2. "),n("strong",[s._v("如何创建和使用 Channel？")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 请写出创建和使用 Channel 的代码示例，并解释基本的 Channel 操作。")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":"),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个无缓冲的 Channel")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送数据到 Channel")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nvalue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从 Channel 接收数据")]),s._v("\nfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[s._v("创建：使用 "),n("code",[s._v("make")]),s._v(" 函数创建 Channel。")]),s._v(" "),n("li",[s._v("发送数据：使用 "),n("code",[s._v("<-")]),s._v(" 运算符将数据发送到 Channel。")]),s._v(" "),n("li",[s._v("接收数据：使用 "),n("code",[s._v("<-")]),s._v(" 运算符从 Channel 接收数据。")])])])]),s._v(" "),n("h3",{attrs:{id:"_3-无缓冲-channel-与有缓冲-channel-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-无缓冲-channel-与有缓冲-channel-的区别"}},[s._v("#")]),s._v(" 3. "),n("strong",[s._v("无缓冲 Channel 与有缓冲 Channel 的区别")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 请解释无缓冲 Channel 和有缓冲 Channel 的区别，以及它们的适用场景。")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[n("strong",[s._v("无缓冲 Channel")]),s._v(":\n"),n("ul",[n("li",[s._v("发送和接收操作是同步的，即发送者必须等待接收者接收数据，反之亦然。")]),s._v(" "),n("li",[s._v("适用于精确同步的场景，如事件通知或工作交接。")])])]),s._v(" "),n("li",[n("strong",[s._v("有缓冲 Channel")]),s._v(":\n"),n("ul",[n("li",[s._v("发送操作是非阻塞的，直到缓冲区满为止；接收操作是非阻塞的，直到缓冲区为空为止。")]),s._v(" "),n("li",[s._v("适用于允许一定程度异步操作的场景，如任务队列、生产者-消费者模型。")])])]),s._v(" "),n("li",[s._v("示例："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个缓冲区大小为 3 的 Channel")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_4-channel-的阻塞与非阻塞操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-channel-的阻塞与非阻塞操作"}},[s._v("#")]),s._v(" 4. "),n("strong",[s._v("Channel 的阻塞与非阻塞操作")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 什么是 Channel 的阻塞操作？如何实现 Channel 的非阻塞操作？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[n("strong",[s._v("阻塞操作")]),s._v(": 如果 Channel 已满（对于有缓冲 Channel）或没有接收者（对于无缓冲 Channel），发送操作会阻塞；如果 Channel 为空，接收操作会阻塞。")]),s._v(" "),n("li",[n("strong",[s._v("非阻塞操作")]),s._v(":\n"),n("ul",[n("li",[s._v("通过 "),n("code",[s._v("select")]),s._v(" 语句实现："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sent:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Channel is full, cannot send"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])]),s._v(" "),n("li",[s._v("通过 "),n("code",[s._v("ok")]),s._v(" 模式判断："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ok "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ok "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Received:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Channel is closed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])])])])])])]),s._v(" "),n("h3",{attrs:{id:"_5-channel-关闭与判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-channel-关闭与判断"}},[s._v("#")]),s._v(" 5. "),n("strong",[s._v("Channel 关闭与判断")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 如何关闭一个 Channel？如何判断一个 Channel 是否已经关闭？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("close")]),s._v(" 函数关闭一个 Channel："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("li",[s._v("判断 Channel 是否关闭："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ok "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("ok "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Channel is closed"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])]),s._v(" "),n("li",[s._v("关闭后的 Channel 仍然可以接收数据，但不能再发送数据，否则会引发 panic。")])])])]),s._v(" "),n("h3",{attrs:{id:"_6-channel-的遍历操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-channel-的遍历操作"}},[s._v("#")]),s._v(" 6. "),n("strong",[s._v("Channel 的遍历操作")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 如何遍历一个已经关闭的 Channel 中的所有数据？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":"),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" i\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" ch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("range")]),s._v(" 关键字遍历 Channel，遍历会在 Channel 关闭且数据接收完毕后自动结束。")])])])]),s._v(" "),n("h3",{attrs:{id:"_7-select-语句的用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-select-语句的用法"}},[s._v("#")]),s._v(" 7. "),n("strong",[n("code",[s._v("select")]),s._v(" 语句的用法")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 什么是 "),n("code",[s._v("select")]),s._v(" 语句？如何使用它来处理多个 Channel 操作？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[n("code",[s._v("select")]),s._v(" 语句用于监听多个 Channel 的操作，当某个 Channel 准备好时，会执行对应的 case 语句。")]),s._v(" "),n("li",[n("code",[s._v("select")]),s._v(" 可以实现 Channel 的多路复用、超时控制、非阻塞操作等。")]),s._v(" "),n("li",[s._v("示例："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Received from ch1:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ch2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sent to ch2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("After")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Timeout"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"No operation ready"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_8-channel-的超时操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-channel-的超时操作"}},[s._v("#")]),s._v(" 8. "),n("strong",[s._v("Channel 的超时操作")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 如何实现 Channel 操作的超时控制？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[s._v("使用 "),n("code",[s._v("time.After")]),s._v(" 函数与 "),n("code",[s._v("select")]),s._v(" 语句结合，实现超时控制："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Received:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("After")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Timeout"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_9-nil-channel-的行为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-nil-channel-的行为"}},[s._v("#")]),s._v(" 9. "),n("strong",[n("code",[s._v("nil")]),s._v(" Channel 的行为")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 向一个 "),n("code",[s._v("nil")]),s._v(" Channel 发送或接收数据会发生什么？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[n("code",[s._v("nil")]),s._v(" Channel 会导致永久阻塞，不会执行任何操作。")]),s._v(" "),n("li",[s._v("典型场景：通过设置 Channel 为 "),n("code",[s._v("nil")]),s._v(" 来动态控制 "),n("code",[s._v("select")]),s._v(" 语句中 case 的激活状态。")])])])]),s._v(" "),n("p",[s._v("在 Go 中，尝试向一个 "),n("code",[s._v("nil")]),s._v(" channel 发送或接收数据会导致程序阻塞，这是因为 "),n("code",[s._v("nil")]),s._v(" channel 没有任何接收者和发送者。")]),s._v(" "),n("p",[s._v("如果你尝试向一个 "),n("code",[s._v("nil")]),s._v(" channel 发送数据，例如：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\nch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 向 nil channel 发送数据")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("这段代码将导致程序无休止地阻塞，因为没有任何 Goroutine 在准备接收数据，且 "),n("code",[s._v("nil")]),s._v(" channel 不会处理任何传输。")]),s._v(" "),n("p",[s._v("同样，尝试从一个 "),n("code",[s._v("nil")]),s._v(" channel 接收数据也会导致程序阻塞：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\ndata "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从 nil channel 接收数据")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("在这个例子中，程序也会无休止地阻塞，因为没有任何数据可供接收，且 "),n("code",[s._v("nil")]),s._v(" channel 不能接收任何数据。")]),s._v(" "),n("p",[s._v("一般情况下，在使用 channel 前，要确保 channel 已经被正确初始化，例如：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后使用 ch 进行发送和接收")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("blockquote",[n("p",[s._v("对一个nil chan写入数据写入会阻塞\n对一个nil chan读取数据会阻塞。\n对一个已关闭的chan写入数据写入会panic\n对一个已关闭的chan读取数据写入会立即返回默认值。")])]),s._v(" "),n("h3",{attrs:{id:"_10-channel-的多生产者与多消费者模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-channel-的多生产者与多消费者模式"}},[s._v("#")]),s._v(" 10. "),n("strong",[s._v("Channel 的多生产者与多消费者模式")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 如何实现一个多生产者-多消费者模型？有什么注意事项？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[s._v("可以直接使用 Channel 实现多生产者-多消费者模型，因为 Go 的 Channel 是"),n("strong",[s._v("并发安全")]),s._v("的。")]),s._v(" "),n("li",[s._v("关键在于确保生产者和消费者对 Channel 的关闭有明确的控制，避免出现数据丢失或死锁。")]),s._v(" "),n("li",[s._v("示例："),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[s._v("ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" wg sync"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("WaitGroup\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生产者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Done")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费者")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    wg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Wait")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" value "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" ch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Received:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_11-channel-的死锁问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-channel-的死锁问题"}},[s._v("#")]),s._v(" 11. "),n("strong",[s._v("Channel 的死锁问题")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 什么情况下使用 Channel 会导致死锁？如何避免？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[s._v("典型的死锁情况：\n"),n("ul",[n("li",[s._v("没有接收者的无缓冲 Channel 上进行发送。")]),s._v(" "),n("li",[s._v("没有发送者的无缓冲 Channel 上进行接收。")]),s._v(" "),n("li",[s._v("所有 case 都被阻塞的 "),n("code",[s._v("select")]),s._v(" 语句且没有 "),n("code",[s._v("default")]),s._v(" case。")])])]),s._v(" "),n("li",[s._v("避免死锁的方法：\n"),n("ul",[n("li",[s._v("确保每个 Channel 操作都有对应的发送或接收操作。")]),s._v(" "),n("li",[s._v("使用带缓冲的 Channel 时注意容量的合理设置。")]),s._v(" "),n("li",[s._v("在 "),n("code",[s._v("select")]),s._v(" 语句中提供 "),n("code",[s._v("default")]),s._v(" case 以避免完全阻塞。")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_12-channel-与-waitgroup-的比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-channel-与-waitgroup-的比较"}},[s._v("#")]),s._v(" 12. "),n("strong",[s._v("Channel 与 WaitGroup 的比较")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": Channel 和 "),n("code",[s._v("sync.WaitGroup")]),s._v(" 都可以用于同步 Goroutine，二者有什么区别和适用场景？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[n("strong",[s._v("Channel")]),s._v(":\n"),n("ul",[n("li",[s._v("适用于 Goroutine 之间的数据传递和通信。")]),s._v(" "),n("li",[s._v("可以使用 "),n("code",[s._v("select")]),s._v(" 语句进行多路复用和超时控制。")])])]),s._v(" "),n("li",[n("strong",[s._v("WaitGroup")]),s._v(":\n"),n("ul",[n("li",[s._v("主要用于等待一组 Goroutine 执行完成。")]),s._v(" "),n("li",[s._v("不涉及数据传递，仅用于同步多个 Goroutine 的完成信号。")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_13-channel-的关闭与多接收者"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-channel-的关闭与多接收者"}},[s._v("#")]),s._v(" 13. "),n("strong",[s._v("Channel 的关闭与多接收者")])]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("问题")]),s._v(": 如果一个 Channel 被关闭了，多个接收者 Goroutine 会如何处理？会出现什么问题？")]),s._v(" "),n("li",[n("strong",[s._v("回答要点")]),s._v(":\n"),n("ul",[n("li",[s._v("当一个 Channel 被关闭后，多个接收者 Goroutine 会正常接收剩余数据，当数据接收完后，接收到的值为该类型的零值，并且 "),n("code",[s._v("ok")]),s._v(" 为 "),n("code",[s._v("false")]),s._v("。")]),s._v(" "),n("li",[s._v("没有数据的情况下，接收者 Goroutine 会立即完成接收并退出。")]),s._v(" "),n("li",[s._v("在关闭 Channel 之前需要确保所有的发送操作")])])])]),s._v(" "),n("h3",{attrs:{id:"_14-channel-的底层实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_14-channel-的底层实现原理"}},[s._v("#")]),s._v(" 14. "),n("strong",[s._v("channel 的底层实现原理")])]),s._v(" "),n("h4",{attrs:{id:"基本结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[s._v("#")]),s._v(" 基本结构")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("channel 在 Go 中是一个引用类型，它的底层实现依赖于一个结构体 hchan，该结构体定义在 runtime 包中。\nhchan 结构体的主要字段包括：\n  ```golang\n    qcount：当前通道中的元素个数。\n    dataqsiz：环形队列的大小，即通道缓冲区的大小。\n    buf：实际存放数据的缓冲区，是一个数组指针。\n    elemsize：每个元素的大小，用于内存计算。\n    closed：表示通道是否已关闭。\n    lock: 不允许并发操作, 通过mutex保证并发安全，循环队列的读写都要先加锁\n    sendx 和 recvx：指示发送和接收操作的当前索引，用于在环形队列中进行操作。\n    sendq 和 recvq：分别是阻塞发送和接收 goroutine 的队列，用于处理没有缓冲或者缓冲区满/空的情况。\n  ```\n")])])]),n("p",[s._v("无缓冲和有缓冲区别： 管道没有缓冲区，从管道读数据会阻塞，直到有协程向管道中写入数据。同样，向管道写入数据也会阻塞，直到有协程从管道读取数据。管道有缓冲区但缓冲区没有数据，从管道读取数据也会阻塞，直到协程写入数据，如果管道满了，写数据也会阻塞，直到协程从缓冲区读取数据。")]),s._v(" "),n("h4",{attrs:{id:"channel-的一些特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#channel-的一些特点"}},[s._v("#")]),s._v(" channel 的一些特点")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("- 读写值 nil 管道会永久阻塞  \n- 关闭的管道读数据仍然可以读数据  \n- 往关闭的管道写数据会 panic  \n- 关闭为 nil 的管道 panic  \n- 关闭已经关闭的管道 panic  \n")])])]),n("h4",{attrs:{id:"向-channel-写数据的流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#向-channel-写数据的流程"}},[s._v("#")]),s._v(" 向 channel 写数据的流程：")]),s._v(" "),n("p",[s._v("如果等待接收队列 recvq 不为空，说明缓冲区中没有数据或者没有缓冲区，此时直接从 recvq 取出 G,并把数据写入，最后把该 G 唤醒，结束发送过程；  如果缓冲区中有空余位置，将数据写入缓冲区，结束发送过程；  如果缓冲区中没有空余位置，将待发送数据写入 G，将当前 G 加入 sendq，进入睡眠，等待被读 goroutine 唤醒；")]),s._v(" "),n("h4",{attrs:{id:"向-channel-读数据的流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#向-channel-读数据的流程"}},[s._v("#")]),s._v(" 向 channel 读数据的流程：")]),s._v(" "),n("p",[s._v("如果等待发送队列 sendq 不为空，且没有缓冲区，直接从 sendq 中取出 G，把 G 中数据读出，最后把 G 唤醒，结束读取过程；  如果等待发送队列 sendq 不为空，此时说明缓冲区已满，从缓冲区中首部读出数据，把 G 中数据写入缓冲区尾部，把 G 唤醒，结束读取过程；  如果缓冲区中有数据，则从缓冲区取出数据，结束读取过程；将当前 goroutine 加入 recvq，进入睡眠，等待被写 goroutine 唤醒；")]),s._v(" "),n("h4",{attrs:{id:"使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景：")]),s._v(" "),n("p",[s._v("消息传递、消息过滤，信号广播，事件订阅与广播，请求、响应转发，任务分发，结果汇总，并发控制，限流，同步与异步")])])}),[],!1,null,null,null);n.default=e.exports}}]);