(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{383:function(s,n,t){"use strict";t.r(n);var a=t(4),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("在 Go 语言中，"),n("code",[s._v("rune")]),s._v(" 是一种表示 Unicode 字符的类型。实际上，"),n("code",[s._v("rune")]),s._v(" 是 "),n("code",[s._v("int32")]),s._v(" 的别名，用于表示 Unicode 字符集中的一个字符。这使得 "),n("code",[s._v("rune")]),s._v(" 可以用来处理任意 Unicode 字符，而不仅仅是 ASCII 字符。")]),s._v(" "),n("h3",{attrs:{id:"rune-的基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rune-的基本概念"}},[s._v("#")]),s._v(" rune 的基本概念")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("定义")]),s._v("："),n("code",[s._v("rune")]),s._v(" 是 "),n("code",[s._v("int32")]),s._v(" 类型的别名。它的值范围是从 "),n("code",[s._v("0")]),s._v(" 到 "),n("code",[s._v("0x10FFFF")]),s._v("（Unicode 字符的最大值），也包括一些控制字符。")]),s._v(" "),n("li",[n("strong",[s._v("用途")]),s._v("："),n("code",[s._v("rune")]),s._v(" 常用于表示单个字符，特别是在处理多字节字符时。例如，中文、日文等字符通常采用多个字节表示，而 "),n("code",[s._v("rune")]),s._v(" 可以很好地处理这些字符。")])]),s._v(" "),n("h3",{attrs:{id:"使用示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[s._v("#")]),s._v(" 使用示例")]),s._v(" "),n("p",[s._v("以下是一个使用 "),n("code",[s._v("rune")]),s._v(" 的简单示例：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("rune")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token char"}},[s._v("'a'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用单引号表示单个字符")]),s._v("\n\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rune: %c, Unicode: %U\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch2 "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("rune")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token char"}},[s._v("'中'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 中文字符")]),s._v("\n\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rune: %c, Unicode: %U\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ch2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历字符串中的字符")]),s._v("\n\tstr "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, 世界"')]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("range")]),s._v(" str "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tfmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Character: %c, Unicode: %U\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"输出结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#输出结果"}},[s._v("#")]),s._v(" 输出结果")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("rune: a, Unicode: U+0061\nrune: 中, Unicode: U+4E2D\nCharacter: H, Unicode: U+0048\nCharacter: e, Unicode: U+0065\nCharacter: l, Unicode: U+006C\nCharacter: l, Unicode: U+006C\nCharacter: o, Unicode: U+006F\nCharacter: ,, Unicode: U+002C\nCharacter:  , Unicode: U+0020\nCharacter: 世, Unicode: U+4E16\nCharacter: 界, Unicode: U+754C\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),n("ol",[n("li",[n("p",[n("strong",[s._v("字符串与 rune")]),s._v("：在 Go 中，字符串是以字节的切片表示的，而 "),n("code",[s._v("rune")]),s._v(" 是以 Unicode 字符的切片表示的。当遍历字符串时，使用 "),n("code",[s._v("for range")]),s._v(" 可以安全地获取到每一个字符对应的 "),n("code",[s._v("rune")]),s._v(" 值。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("内存占用")]),s._v("：由于 "),n("code",[s._v("rune")]),s._v(" 是 "),n("code",[s._v("int32")]),s._v(" 类型，单个 "),n("code",[s._v("rune")]),s._v(" 占用 4 个字节，而不是 1 个字节（如 "),n("code",[s._v("byte")]),s._v("）。在处理大文本或大量字符时，需要注意内存占用。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("对比和转换")]),s._v("：可以使用 "),n("code",[s._v("string(r)")]),s._v(" 将 "),n("code",[s._v("rune")]),s._v(" 转换为字符串，反之则使用 "),n("code",[s._v("[]rune(str)")]),s._v(" 将字符串转换为 "),n("code",[s._v("rune")]),s._v(" 切片。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("处理unicode或utf-8字符")]),s._v(": 相当int32golang中的字符串底层实现是通过byte数组的，中文字符在unicode下占2个字节，在utf-8编码下占3个字节，而golang默认编码正好是utf-8")])]),s._v(" "),n("li",[n("p",[s._v("byte 等同于int8，常用来处理ascii字符")])]),s._v(" "),n("li",[n("p",[s._v("rune 等同于int32,常用来处理unicode或utf-8字符")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);