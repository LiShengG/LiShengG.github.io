(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{399:function(s,n,t){"use strict";t.r(n);var a=t(4),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("new 和 make 是 Go 语言中创建数据结构的两种方式，但它们的用途和工作方式有很大不同。以下是两者的主要区别：")]),s._v(" "),n("h2",{attrs:{id:"new"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new"}},[s._v("#")]),s._v(" new")]),s._v(" "),n("p",[s._v("用途：new 是用于创建某个类型的零值指针。它分配内存并返回一个指向该类型的新分配内存的指针。\n适用类型：任何类型，包括基本类型、结构体、数组、切片、映射等。\n返回值：返回的是一个指向该类型的指针。\n示例：")]),s._v(" "),n("div",{staticClass:"language-go line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main  \n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("  \n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 new 创建一个int类型的零值指针  ")]),s._v("\n    p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出：0（整数的零值）  ")]),s._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将其值修改为42  ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),s._v("  \n    fmt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出：42  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("在这个示例中，new(int) 创建了一个指向 int 类型的指针，并且它的初始值为零值（0）。")]),s._v(" "),n("h2",{attrs:{id:"make"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#make"}},[s._v("#")]),s._v(" make")]),s._v(" "),n("p",[s._v("用途：make 是用于初始化切片、映射和通道，这些类型的零值是 nil，不能直接使用。make 不返回指针，而是返回一个初始化好的值。\n适用类型：只适用于切片、映射和通道。\n返回值：返回的是初始化好的值，而不是指向该值的指针。")]),s._v(" "),n("p",[s._v("总结\n使用 new 创建任意类型的指针，并返回一个指向该类型的零值指针。\n使用 make 初始化切片、映射和通道，并返回一个已初始化的（非 nil）值。\n对于使用哪一个，简单可以记住：")]),s._v(" "),n("p",[s._v("使用 new 时，关注指针和原始值的分配。\n使用 make 时，关注初始化和使用特定的数据结构。")]),s._v(" "),n("p",[s._v("make与new对堆栈分配处理是相同的，编译器优先进行逃逸分析，逃逸的才分配到堆上")])])}),[],!1,null,null,null);n.default=e.exports}}]);